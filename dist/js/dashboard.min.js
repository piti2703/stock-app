import buyedStocks from"./buyedStocks.min.js";import getData from"./apiRequest.min.js";const currencyBoxes=document.querySelectorAll(".currency__box"),stocksBoxes=document.querySelector(".stocks__boxes"),stocks=JSON.parse(localStorage.getItem("buyedStocks"))||buyedStocks;let valueUSD=0,valueEUR=0,valuePLN=0;const pln=document.querySelector(".balance__currency-pln"),eur=document.querySelector(".balance__currency-eur"),usd=document.querySelector(".balance__currency-usd");function calcBalance(){stocks.forEach(async e=>{if("open"==e.status){const s=e.symbol;var t=(await getData(s)).optionChain.result[0].quote,o=stocks.find(e=>e.symbol==s),o=parseFloat(o.quantity)*parseFloat(t.regularMarketPrice);"usd"==e.currency?valueUSD+=o:"eur"==e.currency?valueEUR+=parseFloat(o):valuePLN+=parseFloat(o),displayBalance()}})}function displayBalance(){pln.lastElementChild.textContent=valuePLN.toFixed(2),eur.lastElementChild.textContent=valueEUR.toFixed(2),usd.lastElementChild.textContent=valueUSD.toFixed(2)}function setCurrencyRate(){currencyBoxes.forEach(async e=>{var t=e.dataset.symbol;const o=(await getData(t)).optionChain.result[0].quote;let s=o.regularMarketChangePercent.toFixed(2),a;0<s?(a="plus-color",s=`+${s}%`):(a=0==s?"stagnation-color":"minus-color",s+="%");const c=e.querySelector(".currency__box-percentage"),r=(c.textContent=s,c.classList.add(a),e.querySelector(".currency__box-rate"));r.textContent=o.regularMarketPrice.toFixed(4)})}function displayStocks(){stocks.forEach(e=>{if("open"===e.status){const t=document.createElement("div");t.classList.add("stocks__box"),stocksBoxes.appendChild(t),t.innerHTML=`
		<div class="stocks__box-name" data-symbol='${e.symbol}'>
		<p>${e.stockName}</p>
		<span>${e.exchangeName.toUpperCase()}</span>
		</div>
		<p class="stocks__box-quantity">-</p>
		<p class="stocks__box-percentage">0</p>
		<div class="stocks__box-price">
			<p>0 ${e.currency.toUpperCase()}</p>
			<span>0 ${e.currency.toUpperCase()}</span>
		</div>
		`}}),displayValues()}function displayValues(){const e=document.querySelectorAll(".stocks__box");e.forEach(async e=>{const t=e.firstElementChild.dataset.symbol;const o=(await getData(t)).optionChain.result[0].quote;let s=o.regularMarketChangePercent.toFixed(2),a;0<s?(a="plus-color",s=`+${s}%`):(a=0==s?"stagnation-color":"minus-color",s+="%");const c=e.querySelector(".stocks__box-percentage"),r=(c.textContent=s,c.classList.add(a),e.querySelector(".stocks__box-price")),n=(r.firstElementChild.textContent=o.regularMarketPrice+" "+o.currency,e.querySelector(".stocks__box-quantity"));o.triggerable?(n.classList.add("plus-color"),n.textContent="OPEN"):(n.classList.add("minus-color"),n.textContent="CLOSE");e=(stocks.find(e=>e.symbol==t).quantity*o.regularMarketPrice).toFixed(2);r.lastElementChild.textContent=e+" "+o.currency})}calcBalance(),setCurrencyRate(),displayStocks();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
