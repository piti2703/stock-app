"use strict";var _dummyData=_interopRequireDefault(require("./dummyData"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}console.log(_dummyData.default);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
